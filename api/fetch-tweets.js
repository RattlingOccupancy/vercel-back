const { Rettiwt } = require('rettiwt-api');
const francModule = require('franc');
const franc = francModule.franc;
const express = require('express');
const app = express();

app.use(express.json());

// API keys from environment variables
const apiKeys = [
    "a2R0PXFjdlRVM3dtR3ZEU0lCMmhiRUtxYXBXZ2F6MzR6ZnZENjlsY2J2NmY7YXV0aF90b2tlbj01ZmEwODVkOWM2YWMzODlkY2Y4MjRlNjc5MzQwNzc5ZTg0NWRmZTM1O2N0MD1mZjRkNTYyMDU0YTZhZWU4OTMxYTY5ODNjNjc0NmQ5NDljZWNlZGQ5MDc0ZjA2MDliYzFjNmFhMjY4NzE0OWVmNzE2YTU3YmIxMWY1YjBlM2VlMjc0MmQzNjk4OTk4ZjQxNjA0ZGJiNTIyODAyOWQ4NzgxNjdmMmNhYTliMDBiY2YzZGI5MWE0YzZjN2Q5YTY2NmQzZmNkNGE4NmM2ZDQ5O3R3aWQ9dSUzRDE2NzE0MzAzMDg4NzE0MDU1Njg7",
    
    "a2R0PUZZbmViR2hJZU8ydHFEUVJSYkdCM0xiOWdKUE9sVTBxQWNoQ2NGaEU7YXV0aF90b2tlbj03NzUxN2FkYzQzMGY0NTUxYWI5YmRlNWI2ZjNhOTRhZTc2YWRhZjlhO2N0MD05ZjQzZjkxOTQ4NGRhNGYwNGNkZjIyYTE4NmZiYjdjMjIzM2Q4YmIxMjRjNjk0ZjU4OGZiODNhYzc0OGUzYjA3YzVkNWJlODkzZjBkNzVkYzNmMTQ3ZmI2MjI0MmRkMjc1ZTBiY2ZkYWE3MzU0MjIyN2Q5MDdmNDI5Y2QyODUyNGI4MmU4NjI4ZmM1NTczYzcwYjA0MTQxN2M4ZmFhOTU0O3R3aWQ9dSUzRDE2NzE0MzAzMDg4NzE0MDU1Njg7",


    "a2R0PVFRSHNseG9iRHBodG91RXpyNGhVN1BOT0huNG8zb1lzN3lRVVdGWnA7YXV0aF90b2tlbj05MDVjNTA4MGQzZjVlNDc0MDdlZTk4NWMyZTI4NWYwZWJhYTk2MWIzO2N0MD1hMzk3NzBjMGIyMjI3YTZjNThiZjM1N2ZlZjUwYWNiOGE1YTlkODBhMzg3OTg5YzgyMWFlZjMwNzM0YTIyYjUxYjIwODMyM2UyNTI1MmRkZmEyOTQwYzNkYWRhMjg2MDM1NGUxOTQwZDE3YTYzNTA0NDZhNzhjMmNmNTg3NTNlY2IzNGJjMjk4ZmRiYmI4OGUyYTM2Yzc0NThhZjllYTBhO3R3aWQ9dSUzRDE2NzE0MzAzMDg4NzE0MDU1Njg7",


    "a2R0PU5lZ3RMSDduSDRGVHRRZHZUeXh6Yk01VTNqRFVub3dUQ3F6M0RhYVc7YXV0aF90b2tlbj00ZmQxYzkzZTI1YzBhZDIwMTI2OWEzNzkzZGQ0NzBmZmU2MjQwMjU0O2N0MD1mYTRlYjJlNzUzYzg0MTBmOWYyZmY3ODYwOGE4ZDMzNGY1ZWNhZjJjNWRlNjM1MjAwNTBkOTI2ODI5ZTJjOGFiNTBhZDFkZDgzNWZmZGQ4ZDk1YWMyMjE3ZmI2ZDRjMTY5MDU4YTAyMTVkMmNkMGUxMWY3NzlhNjc2ZmE4Zjc4YzVkMjljNzQ1ZjA3ZWIyNzY3N2NmNGNiMGRiNDY3MTc4O3R3aWQ9dSUzRDE2NzE0MzAzMDg4NzE0MDU1Njg7",


    "a2R0PWh0MFA0b1UyeG93ZE1OSVU5d2JCMGhDeHozaVNWVmx3SUx6am1jZ2s7YXV0aF90b2tlbj1kOTAzYWE0MTIzNDk0NThhYTQ5YzA0ZWE3NmVhY2NlY2JlMWU0ODM2O2N0MD1jNmQ1MzUwZDVlMDhhMjAwMGRlZWE2ZjQ4ZGU3MjNjMzRiZDIzNjk1OTFiMmY1ZWFiYTFmOWVmYjQ4ZmNmYmJiZGE3OWU2ZWM5OTQ3MDI4Nzc1ZGMyZTllM2VlZGZkZDlhYjFmMDY0MjA3YjdhZGFiNTU2MzExNWRkYzU3NzgyOWU4MWUwYzgwNTc5NjUyYTJiOWEwMzdmYWE3N2M5YWJkO3R3aWQ9dSUzRDE2NzE0MzAzMDg4NzE0MDU1Njg7",


    "a2R0PXJ5Y3FTQm1sWWpYRlQ1UlpxVlZlR0VKMFlHclhvZmxnVFB3bnZORWc7YXV0aF90b2tlbj1hMDU0MDEyYWE1ZGU3YzQ0ZTdjYzYyYmNiMzRiMDk5NjZjY2E2NDRhO2N0MD03ZDRmNTE5NDE5MzVjZTgxM2M4ZDQ5Nzk5Njk0MzFmNWNmOWU2MzM5NTBkY2UzZGZmNWFlZmJjNzg4MDZkZjg4ZTg2NmMxYjc2MjBmYWQ5YWE3YzRkZTc2YTQxMTQzMjhlYzYwOTJjODU5YTg2MGQ3NTNhOGJlYmJlZGE5ZWY4MmUxNzBjNzZkZTE1NGQyZTQ5NTBkZmVmN2JjNmI1NGJlO3R3aWQ9dSUzRDE2NzE0MzAzMDg4NzE0MDU1Njg7",

    "a2R0PTJSY2hjeFEwblhnOE5pZDBwNzlyN0lnQzJ3MGxCRFY5akM2VGdJWno7YXV0aF90b2tlbj03YzM1MjM5M2M1MjIwYzYxM2IyOTAwZjFkYmMwODQ2Mzg1ZTgxYmJhO2N0MD01YzMzYWEzMjYzYjE2NzgzOWYwYWY1NDA0M2RlYTQ2YmVmYzczODhmNzg3YTQ0NGRjOTQ5ZWRhOWE3OTc3MjE4OTkwMmFlMmJmNzY1MWNjMjcwNjM1NzVmNDNjYjYyNDBlNzgzODhhNzIwNGQwY2U1MTdiMDRlN2FmYjFmMWEzMzc3NTgwNDMzNTBiMDcyMmQzMjY2MTlkZGI3NTIxZTI0O3R3aWQ9dSUzRDE2NzE0MzAzMDg4NzE0MDU1Njg7",

    "a2R0PVFVTzhYYWxlVzFwR0doZmJ6aTZQOElDT1R0bGJOaklQQml3M25Icjg7YXV0aF90b2tlbj03YmNmMjdjYjI1MzE2MzdlY2EzNzM0MzRiMmRlMDBkMjA5NWE4ZjgyO2N0MD02ZDBkZDUwNTkxZGJmNTA5NDI0MDhkNjljODBhMzc2ZjU1ZTg5MDZjN2NkODlmMmFmZmRkNDcwNjJlMjFlMWE5YjkwODNmNzFjMzE4ODQzMjU1MjBhN2NlMTgwZWUxMDA2YWE3YWUzZGM5YzVhOTBmMTA1ZWJmNWY2OGY5OGM5NDI0ZTk0NTEwZjRiNzlmODg3OTBlMGU2ZTg5MTkyMjUwO3R3aWQ9dSUzRDE2NzE0MzAzMDg4NzE0MDU1Njg7",

    "a2R0PUxVekVNQ0o2RGk4QWlqYXRJVFBEUURqMXlOaVdyT1VEeE12NmxrTU87YXV0aF90b2tlbj0xNGZlMDVlNDMwZjEzMjZhNWNhMDI2ODdjYTZlYmQ1OTkzYmM0YTEzO2N0MD0wMDhlNWQ1YzkyYmZiOTI3NGZhN2NkYjMzNzZiNTY1YmI5ZDA3MjNhY2U4MTk3MTQ4MjY5ODQ0MDViYzMxMWNhNWZlODM3NzE1YWFlNmUxNTFlMThlZTczNDU5MGMyNjM2OWIyM2U2OTVjMWIwM2EzYTA2M2IzYjIxM2M5N2JlMDMxZjU5ZTIyMzliZGNlMmQ4YWRhNGVkOWJkMjA0OWY1O3R3aWQ9dSUzRDE2NzE0MzAzMDg4NzE0MDU1Njg7",


    "a2R0PVZubHV3amNBWFJxODNHSWdITWVXaUNvSzJwakduWWpnMEdjNllGcnY7YXV0aF90b2tlbj0yNjZmMzljNjliMDkwYWJjNmRmZTA1NWZmYmEwMGZmNjdkN2Q2ZjM0O2N0MD1kNmIwODkyNjE5NjE1MTU3NGY5NWM0ODRkODU1MjI3ZmI4ZThiNDNiNWU5ZmQ0YjI0YmU0MzJkMTBlNDczYjE1Yzg4YjY0MWQyZmIzNTAyZGY5OWRlZmJlYjEwNWQ2MWQwOTczZDhjZmM0NmU2Y2MwZWNiNGZiYzY3NzJlNDgyMjI2ODZiNjU5ZDY3ZmRmMGYxMmE0Y2Q5ZWFhNDQwMmQ0O3R3aWQ9dSUzRDE2NzE0MzAzMDg4NzE0MDU1Njg7",


"a2R0PUtnbHFvUTJMQ1g5akFrUXZlWG9hM0pZVnF2b0QzRVlscEFsaFEzVnQ7YXV0aF90b2tlbj1kZTEyOGUzMzE5ZWM3NmUzNmYyOWNiMThmM2UxN2IwNjVmMjAyZWVkO2N0MD1lM2U5ZDdhMTY3ZGRmMTk0YmU0MDYyMDk2MzQyMzM5OWE2Y2QzNmI3OTk1MjMxMjAzNzEzMzAwMDVmNGQ2MTJiZGZlYTFiZmMwNjA4MzE3NTgxYzUwZWJjZWFlOGNiNzRjMTM0Y2IxNDViNTU0ODlmZTc0N2FjOGUxOTRkNWQ5ZTEyMmI3ZmNkYWE5ZmFkYWU0ZThmMWRmYjM5Y2Q5ODhmO3R3aWQ9dSUzRDE2NzE0MzAzMDg4NzE0MDU1Njg7",


"a2R0PVJReHhlcllRTGRJcG9hRFQxckhSODdjNVRSZ2FqaHQ4VTl0eFdFSWE7YXV0aF90b2tlbj1lMzZjNTRjZDU4ZDIxNDYyNjA4Y2JlY2E2YWViZTA3ZjA5ZWIwZjFhO2N0MD00MzcwMjU3NDQwNzhkMGFjZGZiODdhZmQxOTI5ZDFmNDM3ZjlhZTFjYjk0NGU1NzdkNWUyNjIzYzQ5Mjk2N2U4ZWY0ODFlYWZhNDNiZjkyY2YzYTI1MzgwOGRmNjE5YjVkZDgyYThjYmQxMDY0Zjc2NDE3NjAxM2VjZDE1NWQ0ZGE0OTQzOWI5Nzc1YWIwNzY4ZDk5MjI0MGExY2Q0ZjMyO3R3aWQ9dSUzRDE2NzE0MzAzMDg4NzE0MDU1Njg7",


"a2R0PVE0QlJFMHUxa2R3N01oWUFobm1PY0ZPMVN2aHFERmpXUFdHNGVlM2E7YXV0aF90b2tlbj03NmJhZTY2MTkwZjEwNDcwODBlNWI1NTFjMDQzZTQwYjA1OWRmOTZkO2N0MD03ODU3ZjllNDQyOTI1M2EwNDE2ZmViOGM2ZGY5Mzk0OWZmYTViZjQzZjQwZDAzZWExNWMyYTNlNzNiMDFlODM1NzYzNWNlZjVjNWM4ZDAwZWM2MzNjMzM0NTAzM2VjODY0NDhmZmJlZTg1ZDE2ZTcwZjNkYjFmOTVlNWYzZmVmZjE5OThkM2Q5ZDQ4NDkwODdiMWNmOWZmZjI1MzE5ZDA4O3R3aWQ9dSUzRDE2NzE0MzAzMDg4NzE0MDU1Njg7",


"a2R0PU5ibWtxYU1ac2kyeGpNelQxbDFIdW4yVFJucXhycXN2dWpMQTdiSXM7YXV0aF90b2tlbj00NGI0ZmVlNzQxNzgzMGIxMzFmYjMxYmQ4MmI4M2RhNzlmNWM2ZjJmO2N0MD01YThiNGZmZWZhMDY5NzFkZTllZmVkOTdiYmJlZmNmMGY2YmRkYmQ1ZTQyNzIxZmRjM2VjY2MxMGY1OTc1ZTIxMDk4OWYzMjM1ZWEwZTFkNWYzMjFkNDBmNDc1MzNhY2JlNmJkY2I5YzM0NzM2MDQwYjg0OWU0ZDE2MzViYWI0YWVkNzc3MTBjMTlkNGYyYTNlNDViNDc4MjU1MzQ5MmYyO3R3aWQ9dSUzRDE2NzE0MzAzMDg4NzE0MDU1Njg7",

"a2R0PXNaN2lCM1RYdVVYb2lFZlNmSmZZVUw0WEh3eGJEUU50TXJlb3dWY1U7YXV0aF90b2tlbj00NmQ1MWNhZjhhYTQ0OWRiMDE1ZjM0ZGY0MGJmYjNjYmU2NzE1ZGUyO2N0MD1iZTljMzdiNjA2ZGQzNDY3NmU5NGIyMWU3YzcxYjMzMGZjODgyNmJkYTY3MWQ4OTkwMTVhMDkxZWU2NDE1MjJkYWM0N2QwYmQxNGEzZGU4N2E2YzU4YzhmNzliM2U2MmRlZWY1NGM1YTdkODBjOThlMDMyMDc4MDA5MzhmY2E3ZWE4ZmY5NTdlYzE2ZGUxYTZjMTlkYjVhYjJkNWQ3Y2Y1O3R3aWQ9dSUzRDE2NzE0MzAzMDg4NzE0MDU1Njg7",

"a2R0PVgyZnhkdVhqQW1iNzlxZUFJM2dpSUNoOEl6b050OFF4NkZqUVQ1V2E7YXV0aF90b2tlbj1mZTBjYzU0NGNkMzE4N2MzZmZkMjc2ZTcyMjFhNDQ0ZGRhMzFiYzk5O2N0MD0zMzc2ZDliNjZlZWNkMzAzOWIzMzczZDQyNTJmYjlhZjkyYzg5YzE1NmM0OGE4NDBlODUzMGEwZGNhN2MwOTVhNjM0NDFhODllZWY4ZGEzM2NmOGYzYjhhZjZiYzYxM2IxYmE0ZWM1M2E0NDllZjM1M2ZiODMxOTNmYWRlOTA5YmE2NmUxM2IyZGJiYzljNWM4ODY3ZDU0MTRkOWIxYTJlO3R3aWQ9dSUzRDE2NzE0MzAzMDg4NzE0MDU1Njg7",

"a2R0PWFWNTBvOWx1cUtGNmR6eng4S2FGZU9PdDZ0Qlkya3UyVmRDeDhOdzk7YXV0aF90b2tlbj0xOTkzYTJiNzhhOWZkOWU2NWQyY2Y0ODY3ZjBiYWE3MGNiOTA3NTAyO2N0MD1hNTJhN2FkZWQ2OWNkMTMzZDhlNDIyZDQ1NzQyNGUyZGMzYjkwZGM0ODY0NTExM2M2YjU1NGM0NDY0YzRmNjdiYWZkZjRkODFkOWQ0MDE4YzRhMjI2ZjAxNTE5OTcwMDQ3NWM3MWFjNjVjNjVlYzQ3MTg4MzJhZWU2NTY1MDIzMTAyMDRjYWQwOGE5YzUzMjg0MGMzMGI1NjZjNDUyNDNhO3R3aWQ9dSUzRDE2NzE0MzAzMDg4NzE0MDU1Njg7",

"a2R0PTVFdUhOQVVDV2VJRkRjeW5NcWM1SjhSTTVsejRyUmdWTW10aVRrUlA7YXV0aF90b2tlbj1jNzFlNzUwYmRhZjc1NzBlZWFkODQ1M2ZiNzY3NDhjNjlkMjdkZTk0O2N0MD03MzkwN2Y1ODJjZDBjY2YyNGE0NTc0YzhmNjY3Y2MxMWEwZDA0ZGUxMzZkOTIyNDAyMjBiZmY3OTEwZGY1Y2FhY2M0YWIzZGI4OGYyNDljMGVjM2M2NWJiNmMwMjFkMzU3MWYzNmZlMjAzMmFiN2JiMGFkMDI3YTc0OTNlMzIxNWVhYTUzMGRmZTkxNWUwNGM4NjAzNmU3NzA5Njg1MTk4O3R3aWQ9dSUzRDE2NzE0MzAzMDg4NzE0MDU1Njg7",

"a2R0PVBEcHVzWkdpd2pqNFJWYmFmZXdLWEpOTDFSZzJKQzFkSFZLNXJDREw7YXV0aF90b2tlbj1lMWUxOGE0MTI1NDI3ZTM2YjZmZDNlYTMwNWFkZWQ0ZjA5MTY5YTA0O2N0MD01MmFmOGRkNDIyNGEwNzMwN2IzYWI0YTUyZjBjZmE3MDVjOTUyNTJjNzk4NTE5YTk5MDhlYWZkZWI5ZWZkZWY4NGY5MGU0ZjI4MjZiNWQ2NmVkM2QyZjM4ZjgzODI1NTVmY2JlMzNmMWQ3ZWIyMmE4MDM0NWRiODYzZDA2NzE3MzE3NzdhNWVmMGNiNTEwZGViZmI0ZDJhZmQzYWJlMjgwO3R3aWQ9dSUzRDE2NzE0MzAzMDg4NzE0MDU1Njg7",

"a2R0PU9JbkhZOTNERUY0ME9jS2dsY3JmSU82NUpoT0ZkZDFybFhrakhEUW47YXV0aF90b2tlbj04MGY2NGU1NWVkNTE1MjRjZmQyNjkyMDg3ZDRmYjllM2UyZmJhMGIzO2N0MD1jNjdkMzU0NTA3OTNiNTdiYjc3MjE4ZWFhMzllNjlmNjA4NTI0NmE0OGI5MTQ5YWIyNDg4NTFjZGUwNGMwNTZjNTdhMjYzMDI0OTE4OWJhNWYwZTg3ZTdjZTEzNmI5MjkyOTNmNDBhMmI2N2ZhNjJhNTNlNmZjODU0NTdjYTk1MGMwM2VhOWIxN2RiNGQ5N2E3NjRjODA4ZmE1YWQwNzQ1O3R3aWQ9dSUzRDE2NzE0MzAzMDg4NzE0MDU1Njg7",

"a2R0PWtUWGdCNTJnZlV5c09WRUdMeE51SFRvT0hLeEJoRHNBZThPcGxjUG07YXV0aF90b2tlbj1jNThkNTY2ZWZlMjYwNjg4NDg4ODNkYWM3YmQyODU2ZTA5NGM2NzZjO2N0MD00N2MzOTczOTMxZTM0ZTRiNWE1MzA2YmU3NDhiMGE3OTQxNGFlYzA4YjY1OTUxZjUzNWNmNDQ4NzhhMGQyM2U4MzNlOTRlZDBjMzM5ZjM3Mzc0NDA3M2JjODNiMjE1NjQ4ODU0MDRhNjM2YjEzZGEyNGQzOTU0OGVkNGRhMzg5MWM1YzNhMTFmYjQwZDY3N2QxY2NjNTc4NWZlNmQyYjU3O3R3aWQ9dSUzRDE2NzE0MzAzMDg4NzE0MDU1Njg7",

"a2R0PTRqcFpOVWdqN3JjNjFqWE9lSVBSVlJGcWVhWGtpd2w5OUg0eVloRUw7YXV0aF90b2tlbj03NzVkMTBmODkxOGZkODY3ZGY3OTY5MDJjMWM0MTJhZjY3YmRjYWJmO2N0MD05YzQ2Yjg0NzRiOWJjYmQ5YjM4YzExMTgxM2Y1NGZiYjNiNzdiOWM3ZjFkOTVkYjA0NmVlZmIwYzZmNzhmOTExMmY3YmViYmE0ZWE4MzM3YmU2NWMxMDM4MDEwY2ZmZjE2ODU4MzU5ZGZhNDVhZGM2YTkwYzg1NWUwMmNiYjQwMWNkNTFlMzJhYzZiYWQ0ZTBlMTE3Njk2MWY3ODJjNWU0O3R3aWQ9dSUzRDE2NzE0MzAzMDg4NzE0MDU1Njg7",

"a2R0PTZnMVZXZWpaRGpYWUtBclRybUtpVFFoMENwWHdYMUhCWE10cnJQUVI7YXV0aF90b2tlbj0zNDYzYWYxOGI4YTcwNmE3N2Q1ZjgxZWViYmI5MGZkYTI3OGJkMTRlO2N0MD03MzI3OWJiN2E4N2FhYTA5MjFhZDc5YjRjMTM2OTBmODcwYjEyNWVmMjQ5MDE4ZjUwZTlmZWUwY2ExNDY2NWUyNjNjOGM5NGE0NjE3NjU0MGZhZDNhMzYzZjIzYmZlMWE1NDUzOTZjYmRiZDgxYzY0Mjg2NjM2MmQ5MWExNzRlMDA1NzRhMzY0NjYyYjA2Mzk5NzViNjFkZmIxNmVlNTFjO3R3aWQ9dSUzRDE2NzE0MzAzMDg4NzE0MDU1Njg7",

"a2R0PUlVWkdCMUVySkx4THJla3ppNUVBYUx2SmlSUVk4dVhMRmRHSmMwSUk7YXV0aF90b2tlbj1kZGY0NzY1N2QxMWMwNzA4YWI4MDk0Y2IyOGFhODFkYjE0NzNmYTYxO2N0MD01NDI1ODkyNTVlOGUyMGNkNmYyOWNlNzI1NWE3NmMyZWNhYjYzMmIzZmMxOTJkNDg1MTczODEzMGQ3ZjY2YmFkY2JhYmQ3YmNjYTBmYmE0N2Y1NTg2YzFhZGYwYWYwNzQ1MzUwZmNlYTExYjQ2ZDFhMGMzYzdkY2I3MDc1MWRkMDdmYTExMDRkZDJiODJlMmJiOGEyMjhhMjE0NWU0NDdmO3R3aWQ9dSUzRDE2NzE0MzAzMDg4NzE0MDU1Njg7",

"a2R0PVBRRHB4UHVNVGpYQk1HOThmZ2JCM2Rjd1A2NXpKdVFKNzZRekk2aGg7YXV0aF90b2tlbj0xZGVmZjQ2ZjM4MjAzNTc4NGFlZTNhN2Y4MzAyMWI3YjFjNTg2YjFhO2N0MD05MjU4Y2M3ZmYwOWJhZmMwZDNkZjc1MzBhZmI3YzZjNzdhMzQwYWRiZDQ2YmQxYzIzMjYzZDUzNDBhZThhZGRkZDVmNWIwYjdmZTdhMzZmMjViYzc3MTM5ZWI3YTE0NDliN2JlNWE3YWM2ZWEyNzJjZGRmNDU0NWZlM2YwN2EzOGIxZDIwZTAwZjRiMDZjZDYwNDM5MWJlNTQwMGVmN2I0O3R3aWQ9dSUzRDE2NzE0MzAzMDg4NzE0MDU1Njg7",

"a2R0PXZDNW9PZk05Q25HajBiRlQ0ODhJeEtrc0NsUDF5WGkwclFkV2xvWGw7YXV0aF90b2tlbj1kN2U5ZjZjYTY1ZThmMGQxNjc1NWMyYjVjNGY4OWY3ZTg1ZDg2MWZmO2N0MD1iYjcxMzdlMmU1OTVjODEyZjYzYWVmM2JhMzdjY2JjMmQ5YjFmYWFmYzFjMjM5YTI2ZDVhYTE2M2VkOGFiN2ExOWM2NDg0MDBkNGNkNWY3ODcwNGRhZDU4MjNlNWEyM2M2YjFjMWI5MTc4ZDUyZmQxMjliZTgwNzhlMTFiZTBhY2E0ODM5MDg3MWE2ZDM2NDllNmUwOTY4YzllNjQyODY0O3R3aWQ9dSUzRDE2NzE0MzAzMDg4NzE0MDU1Njg7",

"a2R0PUNycTl1eEJ1OFZNOTJSYjFqcmpNZVNJdEhac21YMGtSZHp1UGxJZ3o7YXV0aF90b2tlbj1jM2Y5MWVkNTIwMzQ0ZjQ3YTg4ZmQ5MDkwODM5NTkyZGQ3ZTY4Y2E3O2N0MD1hNTJjNzE1NDU4YjRkMWJmMTdhZmJmZDM5ODFkZmZiNzgwZTNjZjI3NDZkZDEwMmFhNTNiNzM2MmE1MWEyMzk4NDIyYTQyNjI4MTNkYjljZjk3OTg1MmFiOTdjYjUxNjI3ZDMyMTA2ZTI4MDExMmYwZTViNjdjZDY4YzhkYjY2YWY5ODMzOGQ5YWVjODk4ODIyYmNlZWUyODkwMTE3MWNlO3R3aWQ9dSUzRDE2NzE0MzAzMDg4NzE0MDU1Njg7",

"a2R0PVZZcm4wMklDZzAzenhUbVo1ZWZDcTNRb1VwMnhwRE9vTE9pOWJ5S0k7YXV0aF90b2tlbj0zOWE3NWVjYWYyNWYxYzE5MTdiMDZkMjhkYWE0M2RhZjlmZWMyMDUyO2N0MD0zMjQ0YzIzZWVjNjRhZDdiMjY4ZGUzNDk4MjM4NTQwZGFiY2ZjNjA2ZmVmMTQyNjE2MTVhNGVjYmFhNGYyMWE5NjcxZTgzYjZiZDNhMjg4MjBkZDg4MDMwZjc2MzE4Zjg2YjYwODYyNTI0NzZmZGNjZjNjNDMwZDhiYTY2ODEwOGIyZWZiYTZjOGJhNTQ3ZDNmMzZlMGFhODI1N2MyYzQ0O3R3aWQ9dSUzRDE2NzE0MzAzMDg4NzE0MDU1Njg7",

"a2R0PVUxaTVOQVJYVU5JTjFmS3VCcU9lWkRRaWVEdGpadTZCN2hKaGhVeXU7YXV0aF90b2tlbj1hMjc4ZDM4NTI0YTE4MzY2ZWJhZmU3NjY2YTEyMzE2OTNmZmE2MTkzO2N0MD0yODg2Y2Q3MmYxMTQ5NjI3YzAzNGZkOGU4NDNjMDQzODFjMDUyNzBkMDczMzAwMmNlYmE4OWQxZjE5MTg2NDkyYmI3NjcxZmYzZjkwMThlOTNmNzNjN2MwNTI0MWRhZjhlNzM2ZmI5ZmZkNjI3NjUzOGFjMzc1MjU2OGMyOTFmYjhmNzNiN2Y3MjI5ZDU3MjBlMDEzYTM5ODA4MmZjMGE3O3R3aWQ9dSUzRDE2NzE0MzAzMDg4NzE0MDU1Njg7",

"a2R0PXpiYVV4ekxkMVBYa1BLSjFOU2d2UjFtTTRwZTE2YktRbTdLTVlhNzc7YXV0aF90b2tlbj1kMWFmMzRjZDUwMjcxODczNTExMDEwZTEzZjY1ZTg0MTk1NTQ2MWUzO2N0MD05ZjJhNGRlMDNlNjZiYWI0MzgxYTlkNDMwYjc3ZWFmZTRjNTI1YzAzNDM0YTQxNGU5N2QyY2Q2MWM3ZDU2ZGE0ZmQ3MWE4MTBlOTAzMzViMGRmMDYzOTljMWRjOTFhNDhiYTllMWYwOGZjNGUxZGJhYTIwMzVjZDhlZGIyOTMzZGY5NDA4M2U1NTFmYWM0ZmU3OWE2YzkyYTZhZWU0ZjAyO3R3aWQ9dSUzRDE2NzE0MzAzMDg4NzE0MDU1Njg7",

"a2R0PWEzZ3pQY3dXWnFaT0xSckdXamR6TUhseDdJdG96ZkFMbWZpZlNEbVI7YXV0aF90b2tlbj1kZGY1NmIyYThmOTViZmYxMzBlNzg3YjA3MWM3ZWFhYmYzOTIwZDM3O2N0MD1mMmRmZjZlNzQ5OTcxODcxMTFhZWIzNGU4OGQwNjFkODYyOGRkZmIwNTY1Zjc4MGEyMGYwZjI1N2Y2YTM0NWQyOWJhZTQ2NDNhOGUyMDhiM2I0M2E0ZGNhOWM4MjZhY2ViNjA5NzNmM2IwN2E2OWZjYzk3YmNkM2U0YTNlODhhMGIwNGJiMzkxODljYzY2MmQ3NmM0YTc2MWE2MWQ0MjEzO3R3aWQ9dSUzRDE2NzE0MzAzMDg4NzE0MDU1Njg7"
];

function createRandomRettiwt() {
    if (apiKeys.length === 0) {
        throw new Error('No API keys available');
    }
    const randomKey = apiKeys[Math.floor(Math.random() * apiKeys.length)];
    return new Rettiwt({
        apiKey: randomKey,
        logging: false,
        delay: () => 1000 + Math.random() * 1000 // 1-2 sec delay
    });
}

async function getTweets(topic, totalCount = 20) {
    const allTweets = [];
    const seenIds = new Set();
    
    // Define multiple search filters
    const filters = [
        { keywords: [topic] },
        { hashtags: [topic.replace('#', '')] }
    ];

    for (const filter of filters) {
        while (allTweets.length < totalCount) {
            const remaining = totalCount - allTweets.length;
            const batchSize = Math.min(50, remaining);
            const rettiwt = createRandomRettiwt(); // Random key + delay
            
            let tweets;
            try {
                tweets = await rettiwt.tweet.search({
                    ...filter,
                    maxResults: batchSize
                });
            } catch (err) {
                console.error(`⚠️ API error (switching key): ${err.message}`);
                continue; // Try with new key on next iteration
            }

            if (!tweets?.list?.length) break; // No more tweets for this filter
            
            // Filter valid English tweets
            const validTweets = tweets.list.filter(t => 
                t.fullText?.length > 20 && 
                !seenIds.has(t.id) && 
                franc(t.fullText) === 'eng'
            );
            
            // Add to results
            validTweets.forEach(t => {
                seenIds.add(t.id);
                allTweets.push({ text: t.fullText });
            });

            console.log(`🔁 Fetched ${allTweets.length}/${totalCount} tweets...`);
            
            // Additional safety delay
            await new Promise(resolve => setTimeout(resolve, 500));
        }
        if (allTweets.length >= totalCount) break;
    }
    return allTweets.slice(0, totalCount);
}

app.post('/', async (req, res) => {
    try {
        const { topic } = req.body;
        if (!topic) {
            return res.status(400).json({ success: false, error: 'Topic is required.' });
        }
        console.log(`🚀 Starting fetch for '${topic}'...`);
        
        const tweets = await getTweets(topic, 20);

        if (tweets.length > 0) {
            return res.json({ success: true, tweets });
        } else {
            return res.status(404).json({ 
                success: false, 
                error: 'No suitable English tweets found.' 
            });
        }
    } catch (error) {
        console.error('❌ Critical Error:', error);
        return res.status(500).json({ 
            success: false, 
            error: error.message || 'Internal server error.' 
        });
    }
});

module.exports = app;





